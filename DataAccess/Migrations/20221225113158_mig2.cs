using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DataAccess.Migrations
{
    public partial class mig2 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "ImagePath",
                table: "Cars",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 243, 124, 94, 207, 77, 244, 122, 245, 177, 206, 220, 2, 246, 153, 44, 33, 51, 129, 210, 102, 94, 241, 115, 240, 106, 250, 169, 107, 78, 210, 137, 237, 58, 187, 103, 161, 111, 24, 235, 71, 61, 81, 11, 122, 85, 63, 135, 208, 145, 131, 63, 228, 194, 153, 149, 185, 133, 98, 2, 64, 149, 211, 38, 117 }, new byte[] { 179, 102, 125, 249, 120, 233, 127, 24, 154, 200, 94, 64, 147, 56, 199, 177, 19, 171, 223, 72, 184, 65, 174, 142, 45, 20, 28, 225, 190, 95, 113, 63, 25, 19, 5, 149, 224, 68, 35, 63, 48, 25, 73, 225, 17, 240, 37, 237, 216, 185, 212, 130, 9, 140, 220, 123, 115, 183, 28, 205, 252, 137, 37, 166, 147, 88, 59, 78, 156, 230, 28, 122, 166, 36, 222, 17, 41, 25, 12, 212, 191, 63, 109, 98, 9, 70, 62, 197, 109, 165, 116, 156, 6, 185, 93, 41, 9, 66, 254, 213, 119, 186, 152, 86, 38, 211, 205, 171, 49, 180, 93, 168, 199, 169, 138, 148, 107, 220, 36, 180, 229, 122, 197, 231, 81, 53, 181, 206 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "ImagePath",
                table: "Cars");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 43, 77, 51, 40, 225, 243, 191, 251, 170, 221, 89, 90, 117, 235, 86, 246, 250, 60, 65, 252, 200, 89, 83, 62, 147, 221, 22, 53, 69, 189, 182, 101, 16, 29, 40, 105, 211, 233, 194, 149, 210, 123, 196, 18, 202, 51, 87, 161, 40, 250, 247, 63, 38, 102, 203, 211, 137, 112, 27, 251, 218, 190, 245, 246 }, new byte[] { 122, 174, 70, 70, 67, 224, 157, 103, 45, 119, 191, 248, 70, 243, 48, 111, 35, 152, 249, 171, 173, 185, 143, 157, 146, 78, 218, 19, 212, 89, 128, 157, 189, 19, 116, 31, 109, 213, 48, 238, 72, 63, 240, 46, 253, 7, 173, 253, 103, 136, 24, 177, 218, 231, 20, 104, 138, 249, 130, 194, 213, 81, 66, 156, 201, 86, 250, 112, 53, 76, 147, 16, 115, 117, 83, 27, 58, 185, 199, 123, 45, 45, 135, 142, 189, 49, 174, 1, 205, 246, 1, 225, 188, 234, 144, 100, 37, 144, 52, 112, 34, 1, 164, 163, 73, 183, 39, 36, 146, 189, 233, 168, 132, 143, 115, 142, 24, 60, 128, 226, 55, 27, 211, 46, 15, 165, 126, 99 } });
        }
    }
}
